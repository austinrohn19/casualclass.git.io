{"ast":null,"code":"import { createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS } from './index';\nexport var SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\nexport var forVideos = {\n  request: function request(searchQuery, nextPageToken, amount) {\n    return createAction(SEARCH_FOR_VIDEOS[REQUEST], {\n      searchQuery,\n      nextPageToken,\n      amount\n    });\n  },\n  success: function success(response, searchQuery) {\n    return createAction(SEARCH_FOR_VIDEOS[SUCCESS], {\n      response,\n      searchQuery\n    });\n  },\n  failure: function failure(response, searchQuery) {\n    return createAction(SEARCH_FOR_VIDEOS[FAILURE], {\n      response,\n      searchQuery\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Austin/OneDrive/youtube-react/src/store/actions/search.js"],"names":["createAction","createRequestTypes","FAILURE","REQUEST","SUCCESS","SEARCH_FOR_VIDEOS","forVideos","request","searchQuery","nextPageToken","amount","success","response","failure"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,kBAAtB,EAA0CC,OAA1C,EAAmDC,OAAnD,EAA4DC,OAA5D,QAA0E,SAA1E;AAEA,OAAO,IAAMC,iBAAiB,GAAGJ,kBAAkB,CAAC,mBAAD,CAA5C;AACP,OAAO,IAAMK,SAAS,GAAG;AACvBC,EAAAA,OAAO,EAAE,iBAACC,WAAD,EAAcC,aAAd,EAA6BC,MAA7B;AAAA,WAAwCV,YAAY,CAACK,iBAAiB,CAACF,OAAD,CAAlB,EAA6B;AAACK,MAAAA,WAAD;AAAcC,MAAAA,aAAd;AAA6BC,MAAAA;AAA7B,KAA7B,CAApD;AAAA,GADc;AAEvBC,EAAAA,OAAO,EAAE,iBAACC,QAAD,EAAWJ,WAAX;AAAA,WAA2BR,YAAY,CAACK,iBAAiB,CAACD,OAAD,CAAlB,EAA6B;AAACQ,MAAAA,QAAD;AAAWJ,MAAAA;AAAX,KAA7B,CAAvC;AAAA,GAFc;AAGvBK,EAAAA,OAAO,EAAE,iBAACD,QAAD,EAAWJ,WAAX;AAAA,WAA2BR,YAAY,CAACK,iBAAiB,CAACH,OAAD,CAAlB,EAA8B;AAACU,MAAAA,QAAD;AAAWJ,MAAAA;AAAX,KAA9B,CAAvC;AAAA;AAHc,CAAlB","sourcesContent":["import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\r\n\r\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\r\nexport const forVideos = {\r\n  request: (searchQuery, nextPageToken, amount) => createAction(SEARCH_FOR_VIDEOS[REQUEST], {searchQuery, nextPageToken, amount}),\r\n  success: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[SUCCESS], {response, searchQuery}),\r\n  failure: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[FAILURE],  {response, searchQuery}),\r\n};"]},"metadata":{},"sourceType":"module"}