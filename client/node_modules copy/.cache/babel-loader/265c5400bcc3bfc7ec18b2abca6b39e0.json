{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\src\\\\containers\\\\Watch\\\\Watch.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport * as watchActions from '../../store/actions/watch';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\nimport WatchContent from './WatchContent/WatchContent';\nimport { getSearchParam } from '../../services/url';\nimport { getChannelId } from '../../store/reducers/videos';\nimport { getCommentNextPageToken } from '../../store/reducers/comments';\nimport * as commentActions from '../../store/actions/comment';\nexport var Watch = /*#__PURE__*/function (_React$Component) {\n  _inherits(Watch, _React$Component);\n\n  var _super = _createSuper(Watch);\n\n  function Watch() {\n    var _this;\n\n    _classCallCheck(this, Watch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.fetchMoreComments = function () {\n      if (_this.props.nextPageToken) {\n        _this.props.fetchCommentThread(_this.getVideoId(), _this.props.nextPageToken);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Watch, [{\n    key: \"render\",\n    value: function render() {\n      var videoId = this.getVideoId();\n      return /*#__PURE__*/React.createElement(WatchContent, {\n        videoId: videoId,\n        channelId: this.props.channelId,\n        bottomReachedCallback: this.fetchMoreComments,\n        nextPageToken: this.props.nextPageToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.youtubeLibraryLoaded) {\n        this.fetchWatchContent();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\n        this.fetchWatchContent();\n      }\n    }\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return getSearchParam(this.props.location, 'v');\n    }\n  }, {\n    key: \"fetchWatchContent\",\n    value: function fetchWatchContent() {\n      var videoId = this.getVideoId();\n\n      if (!videoId) {\n        this.props.history.push('/');\n      }\n\n      this.props.fetchWatchDetails(videoId, this.props.channelId);\n    }\n  }]);\n\n  return Watch;\n}(React.Component);\n\nfunction mapStateToProps(state, props) {\n  return {\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    channelId: getChannelId(state, props.location, 'v'),\n    nextPageToken: getCommentNextPageToken(state, props.location)\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  var fetchWatchDetails = watchActions.details.request;\n  var fetchCommentThread = commentActions.thread.request;\n  return bindActionCreators({\n    fetchWatchDetails,\n    fetchCommentThread\n  }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Watch));","map":{"version":3,"sources":["C:/Users/Austin/OneDrive/youtube-react/src/containers/Watch/Watch.js"],"names":["React","bindActionCreators","watchActions","withRouter","connect","getYoutubeLibraryLoaded","WatchContent","getSearchParam","getChannelId","getCommentNextPageToken","commentActions","Watch","fetchMoreComments","props","nextPageToken","fetchCommentThread","getVideoId","videoId","channelId","youtubeLibraryLoaded","fetchWatchContent","prevProps","location","history","push","fetchWatchDetails","Component","mapStateToProps","state","mapDispatchToProps","dispatch","details","request","thread"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as watchActions from '../../store/actions/watch';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\r\nimport WatchContent from './WatchContent/WatchContent';\r\nimport {getSearchParam} from '../../services/url';\r\nimport {getChannelId} from '../../store/reducers/videos';\r\nimport {getCommentNextPageToken} from '../../store/reducers/comments';\r\nimport * as commentActions from '../../store/actions/comment';\r\n\r\n\r\nexport class Watch extends React.Component {\r\n  render() {\r\n    const videoId = this.getVideoId();\r\n    return (\r\n      <WatchContent videoId={videoId} channelId={this.props.channelId} bottomReachedCallback={this.fetchMoreComments}\r\n                    nextPageToken={this.props.nextPageToken}/>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n\r\n  getVideoId() {\r\n    return getSearchParam(this.props.location, 'v');\r\n  }\r\n\r\n  fetchWatchContent() {\r\n    const videoId = this.getVideoId();\r\n    if (!videoId) {\r\n      this.props.history.push('/');\r\n    }\r\n    this.props.fetchWatchDetails(videoId, this.props.channelId);\r\n  }\r\n\r\n  fetchMoreComments = () => {\r\n    if (this.props.nextPageToken) {\r\n      this.props.fetchCommentThread(this.getVideoId(), this.props.nextPageToken);\r\n    }\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    channelId: getChannelId(state, props.location, 'v'),\r\n    nextPageToken: getCommentNextPageToken(state, props.location),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchWatchDetails = watchActions.details.request;\r\n  const fetchCommentThread = commentActions.thread.request;\r\n  return bindActionCreators({fetchWatchDetails, fetchCommentThread}, dispatch);\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Watch));"]},"metadata":{},"sourceType":"module"}