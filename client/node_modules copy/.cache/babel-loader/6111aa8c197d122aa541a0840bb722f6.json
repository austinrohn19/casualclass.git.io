{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\src\\\\components\\\\VideoPreview\\\\VideoPreview.js\";\nimport React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport './VideoPreview.scss';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport { getShortNumberString } from '../../services/number/number-format';\nimport { getVideoDurationString } from '../../services/date/date-format';\nimport { Link } from 'react-router-dom';\nTimeAgo.locale(en);\nvar timeAgo = new TimeAgo('en-US');\nexport var VideoPreview = /*#__PURE__*/function (_React$Component) {\n  _inherits(VideoPreview, _React$Component);\n\n  var _super = _createSuper(VideoPreview);\n\n  function VideoPreview() {\n    _classCallCheck(this, VideoPreview);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VideoPreview, [{\n    key: \"render\",\n    value: function render() {\n      var video = this.props.video;\n\n      if (!video) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var duration = video.contentDetails ? video.contentDetails.duration : null;\n      var videoDuration = getVideoDurationString(duration);\n      var viewAndTimeString = VideoPreview.getFormattedViewAndTime(video);\n      var horizontal = this.props.horizontal ? 'horizontal' : null;\n      var expanded = this.props.expanded ? 'expanded' : null;\n      var description = this.props.expanded ? video.snippet.description : null;\n      return /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: this.props.pathname,\n          search: this.props.search\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: ['video-preview', horizontal, expanded].join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: video.snippet.thumbnails.medium.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, videoDuration))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: ['semi-bold', 'show-max-two-lines', expanded].join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, video.snippet.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-preview-metadata-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"channel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, video.snippet.channelTitle), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"view-and-time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, viewAndTimeString), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-max-two-lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, description)))));\n    }\n  }], [{\n    key: \"getFormattedViewAndTime\",\n    value: function getFormattedViewAndTime(video) {\n      var publicationDate = new Date(video.snippet.publishedAt);\n      var viewCount = video.statistics ? video.statistics.viewCount : null;\n\n      if (viewCount) {\n        var viewCountShort = getShortNumberString(video.statistics.viewCount);\n        return \"\".concat(viewCountShort, \" views \\u2022 \").concat(timeAgo.format(publicationDate));\n      }\n\n      return '';\n    }\n  }]);\n\n  return VideoPreview;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/Austin/OneDrive/youtube-react/src/components/VideoPreview/VideoPreview.js"],"names":["React","Image","TimeAgo","en","getShortNumberString","getVideoDurationString","Link","locale","timeAgo","VideoPreview","video","props","duration","contentDetails","videoDuration","viewAndTimeString","getFormattedViewAndTime","horizontal","expanded","description","snippet","pathname","search","join","thumbnails","medium","url","title","channelTitle","publicationDate","Date","publishedAt","viewCount","statistics","viewCountShort","format","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Image} from 'semantic-ui-react';\r\nimport './VideoPreview.scss';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\nimport {getShortNumberString} from '../../services/number/number-format';\r\nimport {getVideoDurationString} from '../../services/date/date-format';\r\nimport {Link} from 'react-router-dom';\r\n\r\nTimeAgo.locale(en);\r\nconst timeAgo = new TimeAgo('en-US');\r\n\r\nexport class VideoPreview extends React.Component {\r\n  render() {\r\n    const {video} = this.props;\r\n    if (!video) {\r\n      return <div/>;\r\n    }\r\n\r\n    const duration = video.contentDetails ? video.contentDetails.duration : null;\r\n    const videoDuration = getVideoDurationString(duration);\r\n    const viewAndTimeString = VideoPreview.getFormattedViewAndTime(video);\r\n    const horizontal = this.props.horizontal ? 'horizontal' : null;\r\n    const expanded = this.props.expanded ? 'expanded' : null;\r\n    const description = this.props.expanded ? video.snippet.description : null;\r\n\r\n    return (\r\n      <Link to={{pathname: this.props.pathname, search: this.props.search}}>\r\n        <div className={['video-preview', horizontal, expanded].join(' ')}>\r\n          <div className='image-container'>\r\n            <Image src={video.snippet.thumbnails.medium.url}/>\r\n            <div className='time-label'>\r\n              <span>{videoDuration}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='video-info'>\r\n            <div className={['semi-bold', 'show-max-two-lines', expanded].join(' ')}>{video.snippet.title}</div>\r\n            <div className='video-preview-metadata-container'>\r\n              <div className='channel-title'>{video.snippet.channelTitle}</div>\r\n              <div className='view-and-time'>{viewAndTimeString}</div>\r\n              <div className='show-max-two-lines'>{description}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  static getFormattedViewAndTime(video) {\r\n    const publicationDate = new Date(video.snippet.publishedAt);\r\n    const viewCount = video.statistics ? video.statistics.viewCount : null;\r\n    if(viewCount) {\r\n      const viewCountShort = getShortNumberString(video.statistics.viewCount);\r\n      return `${viewCountShort} views • ${timeAgo.format(publicationDate)}`;\r\n    }\r\n    return '';\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}