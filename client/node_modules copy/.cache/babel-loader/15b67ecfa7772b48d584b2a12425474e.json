{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Austin\\\\OneDrive\\\\youtube-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { SEARCH_FOR_VIDEOS } from '../actions/search';\nimport { REQUEST, SUCCESS } from '../actions';\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\n\n    case SEARCH_FOR_VIDEOS[REQUEST]:\n      // delete the previous search because otherwise our component flickers and shows the\n      // previous search results before it shows\n      return action.nextPageToken ? state : {};\n\n    default:\n      return state;\n  }\n}\n\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\n  var searchResults = response.items.map(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      id: item.id.videoId\n    });\n  });\n\n  if (prevState.query === searchQuery) {\n    var prevResults = prevState.results || [];\n    searchResults = prevResults.concat(searchResults);\n  }\n\n  return {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    query: searchQuery,\n    results: searchResults\n  };\n}\n/*\r\n  Selectors\r\n */\n\n\nexport var getSearchResults = function getSearchResults(state) {\n  return state.search.results;\n};\nexport var getSearchNextPageToken = function getSearchNextPageToken(state) {\n  return state.search.nextPageToken;\n};","map":{"version":3,"sources":["C:/Users/Austin/OneDrive/youtube-react/src/store/reducers/search.js"],"names":["SEARCH_FOR_VIDEOS","REQUEST","SUCCESS","state","action","type","reduceSearchForVideos","response","searchQuery","nextPageToken","prevState","searchResults","items","map","item","id","videoId","query","prevResults","results","concat","totalResults","pageInfo","getSearchResults","search","getSearchNextPageToken"],"mappings":";AAAA,SAAQA,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,YAA/B;AAEA,eAAe,YAA8B;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,iBAAiB,CAACE,OAAD,CAAtB;AACE,aAAOI,qBAAqB,CAACF,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,WAAzB,EAAsCL,KAAtC,CAA5B;;AACF,SAAKH,iBAAiB,CAACC,OAAD,CAAtB;AACE;AACA;AACA,aAAOG,MAAM,CAACK,aAAP,GAAuBN,KAAvB,GAA+B,EAAtC;;AACF;AACE,aAAOA,KAAP;AARJ;AAUD;;AAED,SAASG,qBAAT,CAA+BC,QAA/B,EAAyCC,WAAzC,EAAsDE,SAAtD,EAAiE;AAC/D,MAAIC,aAAa,GAAGJ,QAAQ,CAACK,KAAT,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,2CAASA,IAAT;AAAeC,MAAAA,EAAE,EAAED,IAAI,CAACC,EAAL,CAAQC;AAA3B;AAAA,GAAvB,CAApB;;AACA,MAAIN,SAAS,CAACO,KAAV,KAAoBT,WAAxB,EAAqC;AACnC,QAAMU,WAAW,GAAGR,SAAS,CAACS,OAAV,IAAqB,EAAzC;AACAR,IAAAA,aAAa,GAAGO,WAAW,CAACE,MAAZ,CAAmBT,aAAnB,CAAhB;AACD;;AACD,SAAO;AACLU,IAAAA,YAAY,EAAEd,QAAQ,CAACe,QAAT,CAAkBD,YAD3B;AAELZ,IAAAA,aAAa,EAAEF,QAAQ,CAACE,aAFnB;AAGLQ,IAAAA,KAAK,EAAET,WAHF;AAILW,IAAAA,OAAO,EAAER;AAJJ,GAAP;AAMD;AAED;;;;;AAGA,OAAO,IAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpB,KAAD;AAAA,SAAWA,KAAK,CAACqB,MAAN,CAAaL,OAAxB;AAAA,CAAzB;AACP,OAAO,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACtB,KAAD;AAAA,SAAWA,KAAK,CAACqB,MAAN,CAAaf,aAAxB;AAAA,CAA/B","sourcesContent":["import {SEARCH_FOR_VIDEOS} from '../actions/search';\r\nimport {REQUEST, SUCCESS} from '../actions';\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\r\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\r\n    case SEARCH_FOR_VIDEOS[REQUEST]:\r\n      // delete the previous search because otherwise our component flickers and shows the\r\n      // previous search results before it shows\r\n      return action.nextPageToken ? state : {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\r\n  let searchResults = response.items.map(item => ({...item, id: item.id.videoId}));\r\n  if (prevState.query === searchQuery) {\r\n    const prevResults = prevState.results || [];\r\n    searchResults = prevResults.concat(searchResults);\r\n  }\r\n  return {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    query: searchQuery,\r\n    results: searchResults\r\n  };\r\n}\r\n\r\n/*\r\n  Selectors\r\n */\r\nexport const getSearchResults = (state) => state.search.results;\r\nexport const getSearchNextPageToken = (state) => state.search.nextPageToken;\r\n"]},"metadata":{},"sourceType":"module"}